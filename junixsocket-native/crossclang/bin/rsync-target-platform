#!/bin/bash

showHelp=0
if [[ $# -eq 0 || "$1" == "-h" || "$1" == "--help" ]]; then
    showHelp=1
fi

no_libraries=0
sdkroot=
while [ $# -gt 0 ]; do
  arg="$1"
  shift
  case "$arg" in
    -L) no_libraries=1 ;;
    -*) showHelp=1 ;;
    *)
        if [ -n "$sdkroot" ]; then
            showHelp=1;
        else
            sdkroot="$arg";
        fi
        ;;
  esac
done

if [ -z "$sdkroot" ]; then
  showHelp=1
fi

if [ $showHelp -eq 1 ]; then
    cat >&2 <<EOT
USAGE: $0 [-L] <path-to-sdk>

OPTIONS:
  -L    Do not transfer libraries or frameworks

EOT
    exit 1
fi

targetConf="$sdkroot/target.conf"
if [ ! -f "$targetConf" ]; then
    echo "target.conf not found: $targetConf" >&2
    exit 1
fi

sdkroot=$(cd "$sdkroot"; pwd)

target_include_path=()
target_library_path=()
target_framework_path=()
IFS=$'\n'
source "$targetConf"

if [ $no_libraries -gt 0 ]; then
  target_library_path=()
  target_framework_path=()
fi


paths=()
paths+=("${target_include_path[@]}")
paths+=(${target_library_path[@]})
paths+=(${target_framework_path[@]})
for path in "${paths[@]}"; do
    if [ -z "$path" ]; then
        continue
    fi
    dir="${path%/*}"
    sourcepath="$path"
    outDir="$sdkroot/$dir"
  
    echo Syncing "$sourcepath"
    mkdir -p "$outDir"
    rsync --delete -a -r "$sourcepath" "$outDir"
done
